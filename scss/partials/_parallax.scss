@use "../mixins";
@use "../variables";

@mixin parallax {
  header.parallax-background {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    transform-style: preserve-3d;
    z-index: -1;

    & > * {
      position: absolute;
      object-fit: cover;
      max-width: 100%;
      max-height: 100%;
    }

    .title {
      // width: max-content;
      // height: max-content;
      display: flex;
      font-size: 7rem;
      gap: 0.4em;
      text-align: center;
      top: -80vh;
      // * Consider sliding the title in from the top
      transform: translateZ(-30px) translateY(150vh) scale(0);
      animation: title-slide-in 2s ease-out 0.5s forwards;

      @keyframes title-slide-in {
        0% {
          transform: translateZ(-30px) translateY(150vh) scale(0);
        }
        100% {
          transform: translateZ(-30px) translateY(0) scale(4);
        }
      }
    }

    .title span {
      font: 1em "Outline Kei", sans-serif;
      font-size: 7rem;
      z-index: 5;
    }

    $letters: K, a, z, u, l;

    @for $i from 1 through 5 {
      .title span:nth-child(#{$i}) {
        animation: nth($letters, $i) 15s ease-in-out 0s infinite forwards;
      }
    }

    // Each letter's color is animated
    @each $letter, $colors in variables.$title {
      @keyframes #{$letter} {
        0% {
          color: nth($colors, 1);
          @include mixins.text-shadow(10px, 10px, nth($colors, 1));
        }
        20% {
          color: nth($colors, 2);
          @include mixins.text-shadow(10px, 10px, nth($colors, 2));
        }
        40% {
          color: nth($colors, 3);
          @include mixins.text-shadow(10px, 10px, nth($colors, 3));
        }
        60% {
          color: nth($colors, 4);
          @include mixins.text-shadow(10px, 10px, nth($colors, 4));
        }
        80% {
          color: nth($colors, 5);
          @include mixins.text-shadow(10px, 10px, nth($colors, 5));
        }
        100% {
          color: nth($colors, 1);
          @include mixins.text-shadow(10px, 10px, nth($colors, 1));
        }
      }
    }

    .starship {
      // TODO: use vw and vh instead of px
      width: 60px;
      animation: starship 10s linear 0s infinite forwards;

      @keyframes starship {
        0% {
          transform: translateZ(-10px) translateX(600px) translateY(-100px) scale(2);
        }
        60% {
          transform: translateZ(-10px) translateX(600px) translateY(-100px) scale(2);
        }
        100% {
          transform: translateZ(-10px) translateX(1500px) translateY(-1000px) scale(2);
        }
      }
    }

    .clouds {
      transform: translateZ(-5px) scale(1.5);
      display: flex;
      top: 20vh;
      width: 100%;

      img {
        width: 33.33%;
      }
    }

    .dark-mountains {
      transform: translateX(-6px) translateZ(-7px) scale(1.7);
      width: 100%;
      bottom: 15vh;
    }

    .mountains {
      transform: translateX(-5px) translateZ(-6px) scale(1.6);
      width: 100%;
      bottom: 15vh;
    }

    .city {
      transform: translateX(-2px) translateZ(-3px) scale(1.3);
      display: flex;
      width: 100%;
      bottom: 10vh;

      img {
        width: 50%;
      }
    }

    .city-with-colors {
      display: flex;
      width: 100%;
      bottom: 0;

      img {
        width: 25%;
      }
    }

    .cover {
      transform: translateX(-8px) translateZ(-10px) scale(2);
      background-image: linear-gradient(to bottom, transparent 0% 75%, #0a426e 75% 100%);
      width: 100%;
      height: 100%;
    }
  }
}
